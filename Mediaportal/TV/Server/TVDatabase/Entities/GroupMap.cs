//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;

namespace Mediaportal.TV.Server.TVDatabase.Entities
{
    public partial class GroupMap
    {
        #region Primitive Properties
    
        public virtual int idMap
        {
            get;
            set;
        }
    
        public virtual int idGroup
        {
            get { return _idGroup; }
            set
            {
                if (_idGroup != value)
                {
                    if (ChannelGroup != null && ChannelGroup.idGroup != value)
                    {
                        ChannelGroup = null;
                    }
                    _idGroup = value;
                }
            }
        }
        private int _idGroup;
    
        public virtual int idChannel
        {
            get { return _idChannel; }
            set
            {
                if (_idChannel != value)
                {
                    if (Channel != null && Channel.idChannel != value)
                    {
                        Channel = null;
                    }
                    _idChannel = value;
                }
            }
        }
        private int _idChannel;
    
        public virtual int SortOrder
        {
            get;
            set;
        }

        #endregion
        #region Navigation Properties
    
        public virtual ChannelGroup ChannelGroup
        {
            get { return _channelGroup; }
            set
            {
                if (!ReferenceEquals(_channelGroup, value))
                {
                    var previousValue = _channelGroup;
                    _channelGroup = value;
                    FixupChannelGroup(previousValue);
                }
            }
        }
        private ChannelGroup _channelGroup;
    
        public virtual Channel Channel
        {
            get { return _channel; }
            set
            {
                if (!ReferenceEquals(_channel, value))
                {
                    var previousValue = _channel;
                    _channel = value;
                    FixupChannel(previousValue);
                }
            }
        }
        private Channel _channel;

        #endregion
        #region Association Fixup
    
        private void FixupChannelGroup(ChannelGroup previousValue)
        {
            if (previousValue != null && previousValue.GroupMaps.Contains(this))
            {
                previousValue.GroupMaps.Remove(this);
            }
    
            if (ChannelGroup != null)
            {
                if (!ChannelGroup.GroupMaps.Contains(this))
                {
                    ChannelGroup.GroupMaps.Add(this);
                }
                if (idGroup != ChannelGroup.idGroup)
                {
                    idGroup = ChannelGroup.idGroup;
                }
            }
        }
    
        private void FixupChannel(Channel previousValue)
        {
            if (previousValue != null && previousValue.GroupMaps.Contains(this))
            {
                previousValue.GroupMaps.Remove(this);
            }
    
            if (Channel != null)
            {
                if (!Channel.GroupMaps.Contains(this))
                {
                    Channel.GroupMaps.Add(this);
                }
                if (idChannel != Channel.idChannel)
                {
                    idChannel = Channel.idChannel;
                }
            }
        }

        #endregion
    }
}
