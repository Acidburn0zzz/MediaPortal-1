//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;

namespace Mediaportal.TV.Server.TVDatabase.Entities
{
    [DataContract(IsReference = true)]
    [KnownType(typeof(Channel))]
    [KnownType(typeof(LnbType))]
    [KnownType(typeof(Satellite))]
    public partial class TuningDetail: IObjectWithChangeTracker, INotifyPropertyChanged
    {
        #region Primitive Properties
    
        [DataMember]
        public int IdTuning
        {
            get { return _idTuning; }
            set
            {
                if (_idTuning != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'IdTuning' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _idTuning = value;
                    OnPropertyChanged("IdTuning");
                }
            }
        }
        private int _idTuning;
    
        [DataMember]
        public int IdChannel
        {
            get { return _idChannel; }
            set
            {
                if (_idChannel != value)
                {
                    ChangeTracker.RecordOriginalValue("IdChannel", _idChannel);
                    if (!IsDeserializing)
                    {
                        if (Channel != null && Channel.IdChannel != value)
                        {
                            Channel = null;
                        }
                    }
                    _idChannel = value;
                    OnPropertyChanged("IdChannel");
                }
            }
        }
        private int _idChannel;
    
        [DataMember]
        public int MediaType
        {
            get { return _mediaType; }
            set
            {
                if (_mediaType != value)
                {
                    _mediaType = value;
                    OnPropertyChanged("MediaType");
                }
            }
        }
        private int _mediaType;
    
        [DataMember]
        public int Priority
        {
            get { return _priority; }
            set
            {
                if (_priority != value)
                {
                    _priority = value;
                    OnPropertyChanged("Priority");
                }
            }
        }
        private int _priority;
    
        [DataMember]
        public int BroadcastStandard
        {
            get { return _broadcastStandard; }
            set
            {
                if (_broadcastStandard != value)
                {
                    _broadcastStandard = value;
                    OnPropertyChanged("BroadcastStandard");
                }
            }
        }
        private int _broadcastStandard;
    
        [DataMember]
        public string Name
        {
            get { return _name; }
            set
            {
                if (_name != value)
                {
                    _name = value;
                    OnPropertyChanged("Name");
                }
            }
        }
        private string _name;
    
        [DataMember]
        public string Provider
        {
            get { return _provider; }
            set
            {
                if (_provider != value)
                {
                    _provider = value;
                    OnPropertyChanged("Provider");
                }
            }
        }
        private string _provider;
    
        [DataMember]
        public string LogicalChannelNumber
        {
            get { return _logicalChannelNumber; }
            set
            {
                if (_logicalChannelNumber != value)
                {
                    _logicalChannelNumber = value;
                    OnPropertyChanged("LogicalChannelNumber");
                }
            }
        }
        private string _logicalChannelNumber;
    
        [DataMember]
        public bool IsEncrypted
        {
            get { return _isEncrypted; }
            set
            {
                if (_isEncrypted != value)
                {
                    _isEncrypted = value;
                    OnPropertyChanged("IsEncrypted");
                }
            }
        }
        private bool _isEncrypted;
    
        [DataMember]
        public bool IsHighDefinition
        {
            get { return _isHighDefinition; }
            set
            {
                if (_isHighDefinition != value)
                {
                    _isHighDefinition = value;
                    OnPropertyChanged("IsHighDefinition");
                }
            }
        }
        private bool _isHighDefinition;
    
        [DataMember]
        public bool IsThreeDimensional
        {
            get { return _isThreeDimensional; }
            set
            {
                if (_isThreeDimensional != value)
                {
                    _isThreeDimensional = value;
                    OnPropertyChanged("IsThreeDimensional");
                }
            }
        }
        private bool _isThreeDimensional;
    
        [DataMember]
        public int OriginalNetworkId
        {
            get { return _originalNetworkId; }
            set
            {
                if (_originalNetworkId != value)
                {
                    _originalNetworkId = value;
                    OnPropertyChanged("OriginalNetworkId");
                }
            }
        }
        private int _originalNetworkId;
    
        [DataMember]
        public int TransportStreamId
        {
            get { return _transportStreamId; }
            set
            {
                if (_transportStreamId != value)
                {
                    _transportStreamId = value;
                    OnPropertyChanged("TransportStreamId");
                }
            }
        }
        private int _transportStreamId;
    
        [DataMember]
        public int ServiceId
        {
            get { return _serviceId; }
            set
            {
                if (_serviceId != value)
                {
                    _serviceId = value;
                    OnPropertyChanged("ServiceId");
                }
            }
        }
        private int _serviceId;
    
        [DataMember]
        public int FreesatChannelId
        {
            get { return _freesatChannelId; }
            set
            {
                if (_freesatChannelId != value)
                {
                    _freesatChannelId = value;
                    OnPropertyChanged("FreesatChannelId");
                }
            }
        }
        private int _freesatChannelId;
    
        [DataMember]
        public int OpenTvChannelId
        {
            get { return _openTvChannelId; }
            set
            {
                if (_openTvChannelId != value)
                {
                    _openTvChannelId = value;
                    OnPropertyChanged("OpenTvChannelId");
                }
            }
        }
        private int _openTvChannelId;
    
        [DataMember]
        public int EpgOriginalNetworkId
        {
            get { return _epgOriginalNetworkId; }
            set
            {
                if (_epgOriginalNetworkId != value)
                {
                    _epgOriginalNetworkId = value;
                    OnPropertyChanged("EpgOriginalNetworkId");
                }
            }
        }
        private int _epgOriginalNetworkId;
    
        [DataMember]
        public int EpgTransportStreamId
        {
            get { return _epgTransportStreamId; }
            set
            {
                if (_epgTransportStreamId != value)
                {
                    _epgTransportStreamId = value;
                    OnPropertyChanged("EpgTransportStreamId");
                }
            }
        }
        private int _epgTransportStreamId;
    
        [DataMember]
        public int EpgServiceId
        {
            get { return _epgServiceId; }
            set
            {
                if (_epgServiceId != value)
                {
                    _epgServiceId = value;
                    OnPropertyChanged("EpgServiceId");
                }
            }
        }
        private int _epgServiceId;
    
        [DataMember]
        public int SourceId
        {
            get { return _sourceId; }
            set
            {
                if (_sourceId != value)
                {
                    _sourceId = value;
                    OnPropertyChanged("SourceId");
                }
            }
        }
        private int _sourceId;
    
        [DataMember]
        public int PmtPid
        {
            get { return _pmtPid; }
            set
            {
                if (_pmtPid != value)
                {
                    _pmtPid = value;
                    OnPropertyChanged("PmtPid");
                }
            }
        }
        private int _pmtPid;
    
        [DataMember]
        public int PhysicalChannelNumber
        {
            get { return _physicalChannelNumber; }
            set
            {
                if (_physicalChannelNumber != value)
                {
                    _physicalChannelNumber = value;
                    OnPropertyChanged("PhysicalChannelNumber");
                }
            }
        }
        private int _physicalChannelNumber;
    
        [DataMember]
        public int Frequency
        {
            get { return _frequency; }
            set
            {
                if (_frequency != value)
                {
                    _frequency = value;
                    OnPropertyChanged("Frequency");
                }
            }
        }
        private int _frequency;
    
        [DataMember]
        public int CountryId
        {
            get { return _countryId; }
            set
            {
                if (_countryId != value)
                {
                    _countryId = value;
                    OnPropertyChanged("CountryId");
                }
            }
        }
        private int _countryId;
    
        [DataMember]
        public int Modulation
        {
            get { return _modulation; }
            set
            {
                if (_modulation != value)
                {
                    _modulation = value;
                    OnPropertyChanged("Modulation");
                }
            }
        }
        private int _modulation;
    
        [DataMember]
        public int Polarisation
        {
            get { return _polarisation; }
            set
            {
                if (_polarisation != value)
                {
                    _polarisation = value;
                    OnPropertyChanged("Polarisation");
                }
            }
        }
        private int _polarisation;
    
        [DataMember]
        public int SymbolRate
        {
            get { return _symbolRate; }
            set
            {
                if (_symbolRate != value)
                {
                    _symbolRate = value;
                    OnPropertyChanged("SymbolRate");
                }
            }
        }
        private int _symbolRate;
    
        [DataMember]
        public int DiSEqC
        {
            get { return _diSEqC; }
            set
            {
                if (_diSEqC != value)
                {
                    _diSEqC = value;
                    OnPropertyChanged("DiSEqC");
                }
            }
        }
        private int _diSEqC;
    
        [DataMember]
        public int Bandwidth
        {
            get { return _bandwidth; }
            set
            {
                if (_bandwidth != value)
                {
                    _bandwidth = value;
                    OnPropertyChanged("Bandwidth");
                }
            }
        }
        private int _bandwidth;
    
        [DataMember]
        public int VideoSource
        {
            get { return _videoSource; }
            set
            {
                if (_videoSource != value)
                {
                    _videoSource = value;
                    OnPropertyChanged("VideoSource");
                }
            }
        }
        private int _videoSource;
    
        [DataMember]
        public int TuningSource
        {
            get { return _tuningSource; }
            set
            {
                if (_tuningSource != value)
                {
                    _tuningSource = value;
                    OnPropertyChanged("TuningSource");
                }
            }
        }
        private int _tuningSource;
    
        [DataMember]
        public int SatIndex
        {
            get { return _satIndex; }
            set
            {
                if (_satIndex != value)
                {
                    _satIndex = value;
                    OnPropertyChanged("SatIndex");
                }
            }
        }
        private int _satIndex;
    
        [DataMember]
        public int FecCodeRate
        {
            get { return _fecCodeRate; }
            set
            {
                if (_fecCodeRate != value)
                {
                    _fecCodeRate = value;
                    OnPropertyChanged("FecCodeRate");
                }
            }
        }
        private int _fecCodeRate;
    
        [DataMember]
        public int PilotTonesState
        {
            get { return _pilotTonesState; }
            set
            {
                if (_pilotTonesState != value)
                {
                    _pilotTonesState = value;
                    OnPropertyChanged("PilotTonesState");
                }
            }
        }
        private int _pilotTonesState;
    
        [DataMember]
        public int RollOffFactor
        {
            get { return _rollOffFactor; }
            set
            {
                if (_rollOffFactor != value)
                {
                    _rollOffFactor = value;
                    OnPropertyChanged("RollOffFactor");
                }
            }
        }
        private int _rollOffFactor;
    
        [DataMember]
        public int StreamId
        {
            get { return _streamId; }
            set
            {
                if (_streamId != value)
                {
                    _streamId = value;
                    OnPropertyChanged("StreamId");
                }
            }
        }
        private int _streamId;
    
        [DataMember]
        public string Url
        {
            get { return _url; }
            set
            {
                if (_url != value)
                {
                    _url = value;
                    OnPropertyChanged("Url");
                }
            }
        }
        private string _url;
    
        [DataMember]
        public int AudioSource
        {
            get { return _audioSource; }
            set
            {
                if (_audioSource != value)
                {
                    _audioSource = value;
                    OnPropertyChanged("AudioSource");
                }
            }
        }
        private int _audioSource;
    
        [DataMember]
        public bool IsVcrSignal
        {
            get { return _isVcrSignal; }
            set
            {
                if (_isVcrSignal != value)
                {
                    _isVcrSignal = value;
                    OnPropertyChanged("IsVcrSignal");
                }
            }
        }
        private bool _isVcrSignal;
    
        [DataMember]
        public Nullable<int> IdLnbType
        {
            get { return _idLnbType; }
            set
            {
                if (_idLnbType != value)
                {
                    ChangeTracker.RecordOriginalValue("IdLnbType", _idLnbType);
                    if (!IsDeserializing)
                    {
                        if (LnbType != null && LnbType.IdLnbType != value)
                        {
                            LnbType = null;
                        }
                    }
                    _idLnbType = value;
                    OnPropertyChanged("IdLnbType");
                }
            }
        }
        private Nullable<int> _idLnbType;
    
        [DataMember]
        public Nullable<int> IdSatellite
        {
            get { return _idSatellite; }
            set
            {
                if (_idSatellite != value)
                {
                    ChangeTracker.RecordOriginalValue("IdSatellite", _idSatellite);
                    if (!IsDeserializing)
                    {
                        if (Satellite != null && Satellite.IdSatellite != value)
                        {
                            Satellite = null;
                        }
                    }
                    _idSatellite = value;
                    OnPropertyChanged("IdSatellite");
                }
            }
        }
        private Nullable<int> _idSatellite;
    
        [DataMember]
        public bool GrabEpg
        {
            get { return _grabEpg; }
            set
            {
                if (_grabEpg != value)
                {
                    _grabEpg = value;
                    OnPropertyChanged("GrabEpg");
                }
            }
        }
        private bool _grabEpg;
    
        [DataMember]
        public System.DateTime LastEpgGrabTime
        {
            get { return _lastEpgGrabTime; }
            set
            {
                if (_lastEpgGrabTime != value)
                {
                    _lastEpgGrabTime = value;
                    OnPropertyChanged("LastEpgGrabTime");
                }
            }
        }
        private System.DateTime _lastEpgGrabTime;

        #endregion
        #region Navigation Properties
    
        [DataMember]
        public Channel Channel
        {
            get { return _channel; }
            set
            {
                if (!ReferenceEquals(_channel, value))
                {
                    var previousValue = _channel;
                    _channel = value;
                    FixupChannel(previousValue);
                    OnNavigationPropertyChanged("Channel");
                }
            }
        }
        private Channel _channel;
    
        [DataMember]
        public LnbType LnbType
        {
            get { return _lnbType; }
            set
            {
                if (!ReferenceEquals(_lnbType, value))
                {
                    var previousValue = _lnbType;
                    _lnbType = value;
                    FixupLnbType(previousValue);
                    OnNavigationPropertyChanged("LnbType");
                }
            }
        }
        private LnbType _lnbType;
    
        [DataMember]
        public Satellite Satellite
        {
            get { return _satellite; }
            set
            {
                if (!ReferenceEquals(_satellite, value))
                {
                    var previousValue = _satellite;
                    _satellite = value;
                    FixupSatellite(previousValue);
                    OnNavigationPropertyChanged("Satellite");
                }
            }
        }
        private Satellite _satellite;

        #endregion
        #region ChangeTracking
    
        protected virtual void OnPropertyChanged(String propertyName)
        {
            if (ChangeTracker.State != ObjectState.Added && ChangeTracker.State != ObjectState.Deleted)
            {
                ChangeTracker.State = ObjectState.Modified;
            }
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        protected virtual void OnNavigationPropertyChanged(String propertyName)
        {
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        event PropertyChangedEventHandler INotifyPropertyChanged.PropertyChanged{ add { _propertyChanged += value; } remove { _propertyChanged -= value; } }
        private event PropertyChangedEventHandler _propertyChanged;
        private ObjectChangeTracker _changeTracker;
    
        [DataMember]
        public ObjectChangeTracker ChangeTracker
        {
            get
            {
                if (_changeTracker == null)
                {
                    _changeTracker = new ObjectChangeTracker();
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
                return _changeTracker;
            }
            set
            {
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging -= HandleObjectStateChanging;
                }
                _changeTracker = value;
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
            }
        }
    
        private void HandleObjectStateChanging(object sender, ObjectStateChangingEventArgs e)
        {
            if (e.NewState == ObjectState.Deleted)
            {
                ClearNavigationProperties();
            }
        }
    
        protected bool IsDeserializing { get; private set; }
    
        [OnDeserializing]
        public void OnDeserializingMethod(StreamingContext context)
        {
            IsDeserializing = true;
        }
    
        [OnDeserialized]
        public void OnDeserializedMethod(StreamingContext context)
        {
            IsDeserializing = false;
            ChangeTracker.ChangeTrackingEnabled = true;
        }
    
        // This entity type is the dependent end in at least one association that performs cascade deletes.
        // This event handler will process notifications that occur when the principal end is deleted.
        internal void HandleCascadeDelete(object sender, ObjectStateChangingEventArgs e)
        {
            if (e.NewState == ObjectState.Deleted)
            {
                this.MarkAsDeleted();
            }
        }
    
        protected virtual void ClearNavigationProperties()
        {
            Channel = null;
            LnbType = null;
            Satellite = null;
        }

        #endregion
        #region Association Fixup
    
        private void FixupChannel(Channel previousValue)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.TuningDetails.Contains(this))
            {
                previousValue.TuningDetails.Remove(this);
            }
    
            if (Channel != null)
            {
                if (!Channel.TuningDetails.Contains(this))
                {
                    Channel.TuningDetails.Add(this);
                }
    
                IdChannel = Channel.IdChannel;
            }
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("Channel")
                    && (ChangeTracker.OriginalValues["Channel"] == Channel))
                {
                    ChangeTracker.OriginalValues.Remove("Channel");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("Channel", previousValue);
                }
                if (Channel != null && !Channel.ChangeTracker.ChangeTrackingEnabled)
                {
                    Channel.StartTracking();
                }
            }
        }
    
        private void FixupLnbType(LnbType previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.TuningDetails.Contains(this))
            {
                previousValue.TuningDetails.Remove(this);
            }
    
            if (LnbType != null)
            {
                if (!LnbType.TuningDetails.Contains(this))
                {
                    LnbType.TuningDetails.Add(this);
                }
    
                IdLnbType = LnbType.IdLnbType;
            }
            else if (!skipKeys)
            {
                IdLnbType = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("LnbType")
                    && (ChangeTracker.OriginalValues["LnbType"] == LnbType))
                {
                    ChangeTracker.OriginalValues.Remove("LnbType");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("LnbType", previousValue);
                }
                if (LnbType != null && !LnbType.ChangeTracker.ChangeTrackingEnabled)
                {
                    LnbType.StartTracking();
                }
            }
        }
    
        private void FixupSatellite(Satellite previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.TuningDetails.Contains(this))
            {
                previousValue.TuningDetails.Remove(this);
            }
    
            if (Satellite != null)
            {
                if (!Satellite.TuningDetails.Contains(this))
                {
                    Satellite.TuningDetails.Add(this);
                }
    
                IdSatellite = Satellite.IdSatellite;
            }
            else if (!skipKeys)
            {
                IdSatellite = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("Satellite")
                    && (ChangeTracker.OriginalValues["Satellite"] == Satellite))
                {
                    ChangeTracker.OriginalValues.Remove("Satellite");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("Satellite", previousValue);
                }
                if (Satellite != null && !Satellite.ChangeTracker.ChangeTrackingEnabled)
                {
                    Satellite.StartTracking();
                }
            }
        }

        #endregion
    }
}
