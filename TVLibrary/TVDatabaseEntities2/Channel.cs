//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System.Collections.Generic;
using System.Collections.Specialized;

namespace TVDatabaseEntities
{
    public partial class Channel
    {
        #region Primitive Properties
    
        public virtual int idChannel
        {
            get;
            set;
        }
    
        public virtual bool isRadio
        {
            get;
            set;
        }
    
        public virtual bool isTv
        {
            get;
            set;
        }
    
        public virtual int timesWatched
        {
            get;
            set;
        }
    
        public virtual System.DateTime totalTimeWatched
        {
            get;
            set;
        }
    
        public virtual bool grabEpg
        {
            get;
            set;
        }
    
        public virtual System.DateTime lastGrabTime
        {
            get;
            set;
        }
    
        public virtual int sortOrder
        {
            get;
            set;
        }
    
        public virtual bool visibleInGuide
        {
            get;
            set;
        }
    
        public virtual string externalId
        {
            get;
            set;
        }
    
        public virtual string displayName
        {
            get;
            set;
        }
    
        public virtual bool epgHasGaps
        {
            get;
            set;
        }
    
        public virtual int freetoair
        {
            get;
            set;
        }
    
        public virtual string name
        {
            get;
            set;
        }

        #endregion
        #region Navigation Properties
    
        public virtual ICollection<GroupMap> GroupMaps
        {
            get
            {
                if (_groupMaps == null)
                {
                    var newCollection = new FixupCollection<GroupMap>();
                    newCollection.CollectionChanged += FixupGroupMaps;
                    _groupMaps = newCollection;
                }
                return _groupMaps;
            }
            set
            {
                if (!ReferenceEquals(_groupMaps, value))
                {
                    var previousValue = _groupMaps as FixupCollection<GroupMap>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupGroupMaps;
                    }
                    _groupMaps = value;
                    var newValue = value as FixupCollection<GroupMap>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupGroupMaps;
                    }
                }
            }
        }
        private ICollection<GroupMap> _groupMaps;
    
        public virtual ICollection<Recording> Recordings
        {
            get
            {
                if (_recordings == null)
                {
                    var newCollection = new FixupCollection<Recording>();
                    newCollection.CollectionChanged += FixupRecordings;
                    _recordings = newCollection;
                }
                return _recordings;
            }
            set
            {
                if (!ReferenceEquals(_recordings, value))
                {
                    var previousValue = _recordings as FixupCollection<Recording>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupRecordings;
                    }
                    _recordings = value;
                    var newValue = value as FixupCollection<Recording>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupRecordings;
                    }
                }
            }
        }
        private ICollection<Recording> _recordings;
    
        public virtual ICollection<Program> Programs
        {
            get
            {
                if (_programs == null)
                {
                    var newCollection = new FixupCollection<Program>();
                    newCollection.CollectionChanged += FixupPrograms;
                    _programs = newCollection;
                }
                return _programs;
            }
            set
            {
                if (!ReferenceEquals(_programs, value))
                {
                    var previousValue = _programs as FixupCollection<Program>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupPrograms;
                    }
                    _programs = value;
                    var newValue = value as FixupCollection<Program>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupPrograms;
                    }
                }
            }
        }
        private ICollection<Program> _programs;
    
        public virtual ICollection<ChannelMap> ChannelMaps
        {
            get
            {
                if (_channelMaps == null)
                {
                    var newCollection = new FixupCollection<ChannelMap>();
                    newCollection.CollectionChanged += FixupChannelMaps;
                    _channelMaps = newCollection;
                }
                return _channelMaps;
            }
            set
            {
                if (!ReferenceEquals(_channelMaps, value))
                {
                    var previousValue = _channelMaps as FixupCollection<ChannelMap>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupChannelMaps;
                    }
                    _channelMaps = value;
                    var newValue = value as FixupCollection<ChannelMap>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupChannelMaps;
                    }
                }
            }
        }
        private ICollection<ChannelMap> _channelMaps;
    
        public virtual ICollection<RadioGroupMap> RadioGroupMaps
        {
            get
            {
                if (_radioGroupMaps == null)
                {
                    var newCollection = new FixupCollection<RadioGroupMap>();
                    newCollection.CollectionChanged += FixupRadioGroupMaps;
                    _radioGroupMaps = newCollection;
                }
                return _radioGroupMaps;
            }
            set
            {
                if (!ReferenceEquals(_radioGroupMaps, value))
                {
                    var previousValue = _radioGroupMaps as FixupCollection<RadioGroupMap>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupRadioGroupMaps;
                    }
                    _radioGroupMaps = value;
                    var newValue = value as FixupCollection<RadioGroupMap>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupRadioGroupMaps;
                    }
                }
            }
        }
        private ICollection<RadioGroupMap> _radioGroupMaps;
    
        public virtual ICollection<Schedule> Schedules
        {
            get
            {
                if (_schedules == null)
                {
                    var newCollection = new FixupCollection<Schedule>();
                    newCollection.CollectionChanged += FixupSchedules;
                    _schedules = newCollection;
                }
                return _schedules;
            }
            set
            {
                if (!ReferenceEquals(_schedules, value))
                {
                    var previousValue = _schedules as FixupCollection<Schedule>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupSchedules;
                    }
                    _schedules = value;
                    var newValue = value as FixupCollection<Schedule>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupSchedules;
                    }
                }
            }
        }
        private ICollection<Schedule> _schedules;
    
        public virtual ICollection<History> Histories
        {
            get
            {
                if (_histories == null)
                {
                    var newCollection = new FixupCollection<History>();
                    newCollection.CollectionChanged += FixupHistories;
                    _histories = newCollection;
                }
                return _histories;
            }
            set
            {
                if (!ReferenceEquals(_histories, value))
                {
                    var previousValue = _histories as FixupCollection<History>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupHistories;
                    }
                    _histories = value;
                    var newValue = value as FixupCollection<History>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupHistories;
                    }
                }
            }
        }
        private ICollection<History> _histories;
    
        public virtual ICollection<TuningDetail> TuningDetails
        {
            get
            {
                if (_tuningDetails == null)
                {
                    var newCollection = new FixupCollection<TuningDetail>();
                    newCollection.CollectionChanged += FixupTuningDetails;
                    _tuningDetails = newCollection;
                }
                return _tuningDetails;
            }
            set
            {
                if (!ReferenceEquals(_tuningDetails, value))
                {
                    var previousValue = _tuningDetails as FixupCollection<TuningDetail>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupTuningDetails;
                    }
                    _tuningDetails = value;
                    var newValue = value as FixupCollection<TuningDetail>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupTuningDetails;
                    }
                }
            }
        }
        private ICollection<TuningDetail> _tuningDetails;
    
        public virtual ICollection<TvMovieMapping> TvMovieMappings
        {
            get
            {
                if (_tvMovieMappings == null)
                {
                    var newCollection = new FixupCollection<TvMovieMapping>();
                    newCollection.CollectionChanged += FixupTvMovieMappings;
                    _tvMovieMappings = newCollection;
                }
                return _tvMovieMappings;
            }
            set
            {
                if (!ReferenceEquals(_tvMovieMappings, value))
                {
                    var previousValue = _tvMovieMappings as FixupCollection<TvMovieMapping>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupTvMovieMappings;
                    }
                    _tvMovieMappings = value;
                    var newValue = value as FixupCollection<TvMovieMapping>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupTvMovieMappings;
                    }
                }
            }
        }
        private ICollection<TvMovieMapping> _tvMovieMappings;

        #endregion
        #region Association Fixup
    
        private void FixupGroupMaps(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (GroupMap item in e.NewItems)
                {
                    item.Channel = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (GroupMap item in e.OldItems)
                {
                    if (ReferenceEquals(item.Channel, this))
                    {
                        item.Channel = null;
                    }
                }
            }
        }
    
        private void FixupRecordings(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (Recording item in e.NewItems)
                {
                    item.Channel = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (Recording item in e.OldItems)
                {
                    if (ReferenceEquals(item.Channel, this))
                    {
                        item.Channel = null;
                    }
                }
            }
        }
    
        private void FixupPrograms(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (Program item in e.NewItems)
                {
                    item.Channel = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (Program item in e.OldItems)
                {
                    if (ReferenceEquals(item.Channel, this))
                    {
                        item.Channel = null;
                    }
                }
            }
        }
    
        private void FixupChannelMaps(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (ChannelMap item in e.NewItems)
                {
                    item.Channel = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (ChannelMap item in e.OldItems)
                {
                    if (ReferenceEquals(item.Channel, this))
                    {
                        item.Channel = null;
                    }
                }
            }
        }
    
        private void FixupRadioGroupMaps(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (RadioGroupMap item in e.NewItems)
                {
                    item.Channel = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (RadioGroupMap item in e.OldItems)
                {
                    if (ReferenceEquals(item.Channel, this))
                    {
                        item.Channel = null;
                    }
                }
            }
        }
    
        private void FixupSchedules(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (Schedule item in e.NewItems)
                {
                    item.Channel = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (Schedule item in e.OldItems)
                {
                    if (ReferenceEquals(item.Channel, this))
                    {
                        item.Channel = null;
                    }
                }
            }
        }
    
        private void FixupHistories(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (History item in e.NewItems)
                {
                    item.Channel = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (History item in e.OldItems)
                {
                    if (ReferenceEquals(item.Channel, this))
                    {
                        item.Channel = null;
                    }
                }
            }
        }
    
        private void FixupTuningDetails(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (TuningDetail item in e.NewItems)
                {
                    item.Channel = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (TuningDetail item in e.OldItems)
                {
                    if (ReferenceEquals(item.Channel, this))
                    {
                        item.Channel = null;
                    }
                }
            }
        }
    
        private void FixupTvMovieMappings(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (TvMovieMapping item in e.NewItems)
                {
                    item.Channel = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (TvMovieMapping item in e.OldItems)
                {
                    if (ReferenceEquals(item.Channel, this))
                    {
                        item.Channel = null;
                    }
                }
            }
        }

        #endregion
    }
}
